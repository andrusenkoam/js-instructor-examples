// –ó–∞–Ω–Ω—è—Ç—Ç—è 8. –ü–µ—Ä–µ–±–∏—Ä–∞—é—á—ñ –º–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É
console.log('–ó–∞–Ω–Ω—è—Ç—Ç—è 8. –ü–µ—Ä–µ–±–∏—Ä–∞—é—á—ñ –º–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É');

// –ö–æ–ª–µ–∫—Ü—ñ—è –æ–± º—î–∫—Ç—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ –∑ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è–º–∏

const cars = [
  {
    make: 'Honda',
    model: 'CR-V',
    type: 'suv',
    amount: 14,
    price: 24045,
    onSale: true,
  },
  {
    make: 'Honda',
    model: 'Accord',
    type: 'sedan',
    amount: 2,
    price: 22455,
    onSale: true,
  },
  {
    make: 'Mazda',
    model: 'Mazda 6',
    type: 'sedan',
    amount: 8,
    price: 24195,
    onSale: false,
  },
  {
    make: 'Mazda',
    model: 'CX-9',
    type: 'suv',
    amount: 7,
    price: 31520,
    onSale: true,
  },
  {
    make: 'Toyota',
    model: '4Runner',
    type: 'suv',
    amount: 19,
    price: 34210,
    onSale: false,
  },
  {
    make: 'Toyota',
    model: 'Sequoia',
    type: 'suv',
    amount: 16,
    price: 45560,
    onSale: false,
  },
  {
    make: 'Toyota',
    model: 'Tacoma',
    type: 'truck',
    amount: 4,
    price: 24320,
    onSale: true,
  },
  {
    make: 'Ford',
    model: 'F-150',
    type: 'truck',
    amount: 11,
    price: 27110,
    onSale: true,
  },
  {
    make: 'Ford',
    model: 'Fusion',
    type: 'sedan',
    amount: 13,
    price: 22120,
    onSale: true,
  },
  {
    make: 'Ford',
    model: 'Explorer',
    type: 'suv',
    amount: 6,
    price: 31660,
    onSale: false,
  },
];

// Example 1 - –ú–µ—Ç–æ–¥ map()
console.log('Example 1 - –ú–µ—Ç–æ–¥ map()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getModels –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π (–ø–æ–ª–µ model) –≤—Å—ñ—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤

const getModels = cars => cars.map(car => car.model);

console.table(getModels(cars));
console.log('\n');

// Example 2 - –ú–µ—Ç–æ–¥ map()
console.log('Example 2 - –ú–µ—Ç–æ–¥ map()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–± º—î–∫—Ç—ñ–≤ —ñ–∑ –∑–º—ñ–Ω–µ–Ω–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏.

const makeCarsWithDiscount = (cars, discount) =>
  cars.map(car => ({
    ...car,
    price: car.price * (1 - discount),
  }));

console.table(makeCarsWithDiscount(cars, 0.2));
console.table(makeCarsWithDiscount(cars, 0.4));
console.log('\n');

// Example 3 - –ú–µ—Ç–æ–¥ filter()
console.log('Example 3 - –ú–µ—Ç–æ–¥ filter()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è filterByPrice –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ —Ü—ñ–Ω–∞ —è–∫–∏—Ö –º–µ–Ω—à–∞ –Ω—ñ–∂ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ threshold

const filterByPrice = (cars, threshold) =>
  cars.filter(car => car.price < threshold);

console.table(filterByPrice(cars, 30000));
console.table(filterByPrice(cars, 25000));
console.log('\n');

// Example 4 - –ú–µ—Ç–æ–¥ filter()
console.log('Example 4 - –ú–µ—Ç–æ–¥ filter()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å onSale —è–∫–∏—Ö true

const getCarsWithDiscount = cars => cars.filter(car => car.onSale);

console.table(getCarsWithDiscount(cars));
console.log('\n');

// Example 5 - –ú–µ—Ç–æ–¥ filter()
console.log('Example 5 - –ú–µ—Ç–æ–¥ filter()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getCarsWithType –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ —Ç–∏–ø —è–∫–∏—Ö –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ type

const getCarsWithType = (cars, type) => cars.filter(car => car.type === type);

console.table(getCarsWithType(cars, 'suv'));
console.table(getCarsWithType(cars, 'sedan'));
console.log('\n');

// Example 6 - –ú–µ—Ç–æ–¥ find()
console.log('Example 6 - –ú–µ—Ç–æ–¥ find()');

const getCarByModel = (cars, model) => cars.find(car => car.model === model);

console.table(getCarByModel(cars, 'F-150'));
console.table(getCarByModel(cars, 'CX-9'));
console.log('\n');

// Example 7 - –ú–µ—Ç–æ–¥ sort()
console.log('Example 7 - –ú–µ—Ç–æ–¥ sort()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByAscendingAmount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ—Å—Ç—ñ amount

const sortByAscendingAmount = cars =>
  [...cars].sort(({ amount: a }, { amount: b }) => a - b);

console.table(sortByAscendingAmount(cars));
console.log('\n');

// Example 8 - –ú–µ—Ç–æ–¥ sort()
console.log('Example 8 - –ú–µ—Ç–æ–¥ sort()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByDescendingPrice –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑–º–µ–Ω—à–µ–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price

const sortByDescendingPrice = cars =>
  [...cars].sort(({ price: a }, { price: b }) => b - a);

console.table(sortByDescendingPrice(cars));
console.log('\n');

// Example 9 - –ú–µ—Ç–æ–¥ sort()
console.log('Example 9 - –ú–µ—Ç–æ–¥ sort()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è sortByModel –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –Ω–∞–∑–≤–æ—é –º–æ–¥–µ–ª—ñ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É —Ç–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É, –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ order

const sortByModel = (cars, order) =>
  [...cars].sort(({ model: a }, { model: b }) =>
    order === 'asc' ? a.localeCompare(b) : b.localeCompare(a)
  );

console.table(sortByModel(cars, 'asc'));
console.table(sortByModel(cars, 'desc'));
console.log('\n');

// Example 10 - –ú–µ—Ç–æ–¥ reduce()
console.log('Example 10 - –ú–µ—Ç–æ–¥ reduce()');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getTotalAmount –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ (–∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π amount)

const getTotalAmount = cars => cars.reduce((acc, car) => acc + car.amount, 0);

console.log(getTotalAmount(cars));
console.log('\n');

// Example 11 - –õ–∞–Ω—Ü—é–∂–∫–∏ –º–µ—Ç–æ–¥—ñ–≤
console.log('Example 11 - –õ–∞–Ω—Ü—é–∂–∫–∏ –º–µ—Ç–æ–¥—ñ–≤');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getAvailableCarNames –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö, —è–∫—ñ –∑–∞—Ä–∞–∑ –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ

const getAvailableCarNames = cars =>
  cars.filter(car => car.onSale).map(car => car.model);

console.table(getAvailableCarNames(cars));
console.log('\n');

// Example 12 - –õ–∞–Ω—Ü—é–∂–∫–∏ –º–µ—Ç–æ–¥—ñ–≤
console.log('Example 12 - –õ–∞–Ω—Ü—é–∂–∫–∏ –º–µ—Ç–æ–¥—ñ–≤');

// –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getSortedCarsOnSale –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ (–í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å onSale), –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —Ü—ñ–Ω–∏

/**
 * Gets cars on sale and sorts them
 * @param {Array} cars - array with objects
 * @returns {Array} -sorted array on sale
 */
const getSortedCarsOnSale = cars =>
  cars.filter(car => car.onSale).sort((a, b) => a.price - b.price);

console.table(cars);
console.log('\n');

// –ü—Ä–∏–∫–ª–∞–¥–∏ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è reduce
console.log('–ü—Ä–∏–∫–ª–∞–¥ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è reduce');

const str = 'duaguidgasuidgauisdhasudasdfhsgvfakhfugduashc';

const result = str.split('').reduce((acc, item) => {
  item in acc ? (acc[item] += 1) : (acc[item] = 1);
  return acc;
}, {});

const result1 = str.split('').reduce((acc, item) => {
  return {
    ...acc,
    [item]: acc[item] ? (acc[item] += 1) : 1,
  };
}, {});

console.log(result);
console.log(result1);
console.log('\n');

const fruitBasket = [
  'banana',
  'cherry',
  'orange',
  'apple',
  'cherry',
  'orange',
  'apple',
  'banana',
  'cherry',
  'orange',
  'fig',
];

const count = fruitBasket.reduce((acc, fruit) => {
  acc[fruit] = (acc[fruit] || 0) + 1;

  return acc;
}, {});

console.log(count);
console.log('\n');

// –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–≤—Ç–æ 6:
// –í–∏–≤–µ—Å—Ç–∏
// 1 Honda
// 2 Audi

// 6 Reno

// –Ø–∫—â–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å—Å–∏–≤
// –í–∏–±–∞—á—Ç–µ, –∞–≤—Ç–æ –Ω–µ–º–∞—î

function logCars(arr) {
  const result = arr.reduce(
    (acc, car, idx) => {
      return acc + `${idx + 1} - ${car}\n`;
    },
    arr.length
      ? `–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–≤—Ç–æ - ${arr.length}\n`
      : '–í–∏–±–∞—á—Ç–µ, –∞–≤—Ç–æ –Ω–µ–º–∞—î üò±'
  );

  return result;
}

console.log(
  logCars(['Honda', 'Audi', 'BMW', 'Skoda', 'Ford', 'Renault', 'Opel', 'KIA'])
);
console.log(logCars([]));

console.log('\n');
console.log('\n');
